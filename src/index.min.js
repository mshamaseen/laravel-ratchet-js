class Shama{constructor(e="ws://localhost:9090"){this.connection=new WebSocket(e);let s=this;this.connection.onopen=function(e){s.onOpen(e)},this.connection.onmessage=function(e){s.onMessage(e)},this.connection.onclose=function(e){s.onClose(e)},this.connection.onerror=function(e){s.onError(e)},this.listeners={},this.defaultListeners(),this.session=null}onOpen(e){console.log("Connection established!"),this.send({route:"initializeWebsocket"})}onError(e){if(e.hasOwnProperty("message"))return console.error(e.message),!0;console.error(e)}onClose(e){console.error("WebSocket closed !")}onMessage(e){let s=JSON.parse(e.data);return s.hasOwnProperty("event")?s.event in this.listeners?this.listeners[s.event](s):(console.log(s),!1):(console.error("response don't have a event property !"),!1)}addListeners(e,s){return"function"!=typeof s?(console.error("listeners value should be a function."),!1):(this.listeners[e]=s,!0)}send(e){if(!e.hasOwnProperty("route"))return console.error("no route specified"),!1;"string"==typeof this.session&&(e.session=this.session),this.connection.send(JSON.stringify(e))}initialize(e){console.log(e.message)}default(e){console.log(e)}defaultListeners(){this.addListeners("error",this.onError),this.addListeners("initialize",this.initialize),this.addListeners("default",this.default)}}